{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luigi.puzziferri\\\\lp-clothing\\\\client\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; // import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container'; // const ShopPage = ({ match }) => (\n//   <div className='shop-page'>\n//     <Route exact path={`${match.path}`} component={CollectionsOverview} />\n//     <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n//   </div>\n// );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  _s();\n\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]); // unsubscribeFromSnapshot = null;            //nuovo metedo di cancellazione istantanea della matrice di collez\n  // componentDidMount() {\n  // const { updateCollections } = this.props;\n  // const collectionRef = firestore.collection('collections');  //invia istantanea dell array di oggetti\n  //recupero dei dati delle collezioni usando il metodo fetch dell'API Rest\n  // fetch(\n  //   'https://firestore.googleapis.com/v1/projects/crown-db-a331a/databases/(default)/documents/collections'\n  // )\n  // .then(response => response.json())\n  // .then(collections => console.log(collections));\n  // collectionRef.get().then                 //chiamata API a Firestore per fetch dei dati\n  //  (snapshot=> {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //   updateCollections(collectionsMap);\n  //   this.setState({ loading: false });\n  // });\n  //   const { fetchCollectionsStart } = this.props;\n  //   fetchCollectionsStart();\n  // }\n  // render() {\n  // const { match } = this.props;\n  // const { loading } = this.state;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ShopPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ShopPage;\n\nconst mapDispatchToProps = dispatch => ({\n  // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopPage\");","map":{"version":3,"sources":["C:/Users/luigi.puzziferri/lp-clothing/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASJ,EAAAA;AAAT,CAAD,KAAsC;AAAA;;AACrDH,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT,CADqD,CAKrD;AAEA;AACE;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AAEA;AACE;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAAjC;AACE,MAAA,SAAS,EAAEJ;AADb;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBAA3B;AACE,MAAA,SAAS,EAAEH;AADb;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxCH;;GAAMC,Q;;KAAAA,Q;;AA2CN,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACtC;AACAP,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AAFC,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n// import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPageContainer from '../collection/collection.container';\r\n\r\n// const ShopPage = ({ match }) => (\r\n//   <div className='shop-page'>\r\n//     <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n//     <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n//   </div>\r\n// );\r\n\r\nconst ShopPage = ({ match, fetchCollectionsStart }) => {\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n  }, [fetchCollectionsStart]);\r\n\r\n  // unsubscribeFromSnapshot = null;            //nuovo metedo di cancellazione istantanea della matrice di collez\r\n\r\n  // componentDidMount() {\r\n    // const { updateCollections } = this.props;\r\n    // const collectionRef = firestore.collection('collections');  //invia istantanea dell array di oggetti\r\n    \r\n    //recupero dei dati delle collezioni usando il metodo fetch dell'API Rest\r\n    // fetch(\r\n    //   'https://firestore.googleapis.com/v1/projects/crown-db-a331a/databases/(default)/documents/collections'\r\n    // )\r\n    // .then(response => response.json())\r\n    // .then(collections => console.log(collections));\r\n\r\n    // collectionRef.get().then                 //chiamata API a Firestore per fetch dei dati\r\n    //  (snapshot=> {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   updateCollections(collectionsMap);\r\n    //   this.setState({ loading: false });\r\n    // });\r\n\r\n  //   const { fetchCollectionsStart } = this.props;\r\n  //   fetchCollectionsStart();\r\n  // }\r\n\r\n  // render() {\r\n    // const { match } = this.props;\r\n    // const { loading } = this.state;\r\n    return(\r\n      <div className='shop-page'>\r\n        <Route exact path={`${match.path}`} \r\n          component={CollectionsOverviewContainer} />\r\n        <Route path={`${match.path}/:collectionId`} \r\n          component={CollectionPageContainer} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}